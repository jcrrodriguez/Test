---
interface Props {
  className: string;
}

const { className } = Astro.props;
---

<div class:list={["custom-cursor", className]}></div>

<style>
  .custom-cursor {
    top: 0;
    left: 0;
    width: 15px;
    height: 15px;
    filter: blur(0px);
    position: fixed;
    border-radius: 9999px;
    pointer-events: none;
    scale: none;
    transition:
      height 0.3s ease-out,
      width 0.3s ease-out,
      filter 0.3s ease-out;
    background-color: var(--color-primary);
    z-index: 9999;
    pointer-events: none;
  }

  .blurAnimation {
    width: 200px;
    height: 200px;
    filter: blur(70px);
    z-index: -9999;
  }
</style>

<script>
  import { $, $$ } from "../consts/dom-selector";
  import { gsap } from "gsap";

  const cursor = $(".custom-cursor");
  const mouseOverElements = $$(".data-cursor");
  let rafId = null;

  mouseOverElements.forEach((e) => {
    e.addEventListener("mouseover", () => {
      cursor.classList.add("blurAnimation");
    });
    e.addEventListener("mouseleave", () => {
      cursor.classList.remove("blurAnimation");
    });
  });

  const lerp = (x: number, y: number, a: number) => x * (1 - a) + y * a;

  const mouse = { x: 0, y: 0 };
  const delayedMouse = { x: 0, y: 0 };

  const manageMouseMove = (e: { clientX: number; clientY: number }) => {
    mouse.x = e.clientX;
    mouse.y = e.clientY;
  };

  const animate = () => {
    delayedMouse.x = lerp(delayedMouse.x, mouse.x, 0.075);
    delayedMouse.y = lerp(delayedMouse.y, mouse.y, 0.075);
    moveCircle(delayedMouse.x, delayedMouse.y);

    rafId = requestAnimationFrame(animate);
  };

  const moveCircle = (x: number, y: number) => {
    gsap.set(cursor, { x, y, xPercent: -50, yPercent: -50 });
  };

  animate();
  window.addEventListener("mousemove", manageMouseMove);
</script>
